repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [types-requests]
        args: [--ignore-missing-imports, --show-error-codes]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/, -ll]
        exclude: tests/

  - repo: https://github.com/gitguardian/ggshield
    rev: v1.25.0
    hooks:
      - id: ggshield
        language: python
        stages: [commit]

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [tests/unit/, -x, -v]

      - id: security-check
        name: security-check
        entry: python
        language: system
        args: [-c, "import subprocess; subprocess.run(['bandit', '-r', 'src/', '-f', 'txt'], check=True)"]
        pass_filenames: false
        always_run: true

      - id: config-validation
        name: config-validation
        entry: python
        language: system
        args: [-c, "
import sys;
sys.path.append('src');
from config_manager import ConfigManager;
config = ConfigManager();
issues = config.validate_config();
if issues['errors']: 
    print('Config errors:', issues['errors']); 
    sys.exit(1);
print('Config validation passed')
"]
        pass_filenames: false
        always_run: true
